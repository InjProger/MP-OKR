//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MissionPlanner {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MissionPlanner.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Advanced Params.
        /// </summary>
        public static string AdvancedParams {
            get {
                return ResourceManager.GetString("AdvancedParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure you want to upload .
        /// </summary>
        public static string AreYouSureYouWantToUpload {
            get {
                return ResourceManager.GetString("AreYouSureYouWantToUpload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Auto WP.
        /// </summary>
        public static string AutoWP {
            get {
                return ResourceManager.GetString("AutoWP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad Battery.
        /// </summary>
        public static string Bad_Battery {
            get {
                return ResourceManager.GetString("Bad_Battery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad KML File :.
        /// </summary>
        public static string Bad_KML_File {
            get {
                return ResourceManager.GetString("Bad_KML_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad Proximity.
        /// </summary>
        public static string Bad_Proximity {
            get {
                return ResourceManager.GetString("Bad_Proximity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad SatCom.
        /// </summary>
        public static string Bad_SatCom {
            get {
                return ResourceManager.GetString("Bad_SatCom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad Vision Position.
        /// </summary>
        public static string Bad_Vision_Position {
            get {
                return ResourceManager.GetString("Bad_Vision_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad Accel Health.
        /// </summary>
        public static string BadAccelHealth {
            get {
                return ResourceManager.GetString("BadAccelHealth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unhealthy AHRS.
        /// </summary>
        public static string BadAHRS {
            get {
                return ResourceManager.GetString("BadAHRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad Baro Health.
        /// </summary>
        public static string BadBaroHealth {
            get {
                return ResourceManager.GetString("BadBaroHealth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad Compass Health.
        /// </summary>
        public static string BadCompassHealth {
            get {
                return ResourceManager.GetString("BadCompassHealth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad Lat/Lng.
        /// </summary>
        public static string BadCoords {
            get {
                return ResourceManager.GetString("BadCoords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unhealthy GPS Signal.
        /// </summary>
        public static string BadGPSHealth {
            get {
                return ResourceManager.GetString("BadGPSHealth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad Gyro Health.
        /// </summary>
        public static string BadGyroHealth {
            get {
                return ResourceManager.GetString("BadGyroHealth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad LiDAR Health.
        /// </summary>
        public static string BadLiDARHealth {
            get {
                return ResourceManager.GetString("BadLiDARHealth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad Logging.
        /// </summary>
        public static string BadLogging {
            get {
                return ResourceManager.GetString("BadLogging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad OptFlow Health.
        /// </summary>
        public static string BadOptFlowHealth {
            get {
                return ResourceManager.GetString("BadOptFlowHealth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad or No Terrain Data.
        /// </summary>
        public static string BadorNoTerrainData {
            get {
                return ResourceManager.GetString("BadorNoTerrainData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Basic Tuning.
        /// </summary>
        public static string BasicTuning {
            get {
                return ResourceManager.GetString("BasicTuning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Beta.
        /// </summary>
        public static string Beta {
            get {
                return ResourceManager.GetString("Beta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на These are beta firmware, use at your own risk!!!.
        /// </summary>
        public static string BetaWarning {
            get {
                return ResourceManager.GetString("BetaWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel.
        /// </summary>
        public static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can not connect to com port and detect board type.
        /// </summary>
        public static string CanNotConnectToComPortAnd {
            get {
                return ResourceManager.GetString("CanNotConnectToComPortAnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot graph this field.
        /// </summary>
        public static string CannotGraphField {
            get {
                return ResourceManager.GetString("CannotGraphField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cant detect your Board version. Please check your cabling.
        /// </summary>
        public static string CantDetectBoardVersion {
            get {
                return ResourceManager.GetString("CantDetectBoardVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change Throttle.
        /// </summary>
        public static string ChangeThrottle {
            get {
                return ResourceManager.GetString("ChangeThrottle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checking .
        /// </summary>
        public static string Checking {
            get {
                return ResourceManager.GetString("Checking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check port settings or Port in use?.
        /// </summary>
        public static string CheckPortSettingsOr {
            get {
                return ResourceManager.GetString("CheckPortSettingsOr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Click when Done.
        /// </summary>
        public static string Click_when_Done {
            get {
                return ResourceManager.GetString("Click_when_Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The Command failed to execute
        ///.
        /// </summary>
        public static string CommandFailed {
            get {
                return ResourceManager.GetString("CommandFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Communication Error - no connection.
        /// </summary>
        public static string CommunicationErrorNoConnection {
            get {
                return ResourceManager.GetString("CommunicationErrorNoConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на compass variance.
        /// </summary>
        public static string compass_variance {
            get {
                return ResourceManager.GetString("compass_variance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Completed.
        /// </summary>
        public static string Completed {
            get {
                return ResourceManager.GetString("Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect.
        /// </summary>
        public static string Connect {
            get {
                return ResourceManager.GetString("Connect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CONNECT.
        /// </summary>
        public static string CONNECTc {
            get {
                return ResourceManager.GetString("CONNECTc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect Failed.
        /// </summary>
        public static string ConnectFailed {
            get {
                return ResourceManager.GetString("ConnectFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connecting Mavlink.
        /// </summary>
        public static string ConnectingMavlink {
            get {
                return ResourceManager.GetString("ConnectingMavlink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Continue.
        /// </summary>
        public static string Continue {
            get {
                return ResourceManager.GetString("Continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Converting bin to log.
        /// </summary>
        public static string Converting_bin_to_log {
            get {
                return ResourceManager.GetString("Converting_bin_to_log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Description: .
        /// </summary>
        public static string Desc {
            get {
                return ResourceManager.GetString("Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Detected a .
        /// </summary>
        public static string DetectedA {
            get {
                return ResourceManager.GetString("DetectedA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Detecting Board Version.
        /// </summary>
        public static string DetectingBoardVersion {
            get {
                return ResourceManager.GetString("DetectingBoardVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disconnect.
        /// </summary>
        public static string Disconnect {
            get {
                return ResourceManager.GetString("Disconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DISCONNECT.
        /// </summary>
        public static string DISCONNECTc {
            get {
                return ResourceManager.GetString("DISCONNECTc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you want to load this into the flight data screen?.
        /// </summary>
        public static string Do_you_want_to_load_this_into_the_flight_data_screen {
            get {
                return ResourceManager.GetString("Do_you_want_to_load_this_into_the_flight_data_screen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Done.
        /// </summary>
        public static string Done {
            get {
                return ResourceManager.GetString("Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Downloaded from internet.
        /// </summary>
        public static string DownloadedFromInternet {
            get {
                return ResourceManager.GetString("DownloadedFromInternet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Downloading from Internet.
        /// </summary>
        public static string DownloadingFromInternet {
            get {
                return ResourceManager.GetString("DownloadingFromInternet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ensure your props are not on the Plane/Quad.
        /// </summary>
        public static string EnsurePropsNotOn {
            get {
                return ResourceManager.GetString("EnsurePropsNotOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Epprom changed, all your setting will be lost during the update,
        ///Do you wish to continue?.
        /// </summary>
        public static string EppromChanged {
            get {
                return ResourceManager.GetString("EppromChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Epprom format changed ({0) vs {1}).
        /// </summary>
        public static string EppromFormatChanged {
            get {
                return ResourceManager.GetString("EppromFormatChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error.
        /// </summary>
        public static string ERROR {
            get {
                return ResourceManager.GetString("ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error binding.
        /// </summary>
        public static string Error_binding {
            get {
                return ResourceManager.GetString("Error_binding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error closing log files.
        /// </summary>
        public static string ErrorClosingLogFile {
            get {
                return ResourceManager.GetString("ErrorClosingLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error communicating with the autopilot.
        /// </summary>
        public static string ErrorCommunicating {
            get {
                return ResourceManager.GetString("ErrorCommunicating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error Connecting
        ///.
        /// </summary>
        public static string ErrorConnecting {
            get {
                return ResourceManager.GetString("ErrorConnecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This feature is not enabled in your firmware..
        /// </summary>
        public static string ErrorFeatureNotEnabled {
            get {
                return ResourceManager.GetString("ErrorFeatureNotEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error loading firmware file.
        /// </summary>
        public static string ErrorFirmwareFile {
            get {
                return ResourceManager.GetString("ErrorFirmwareFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error receiving log list.
        /// </summary>
        public static string ErrorLogList {
            get {
                return ResourceManager.GetString("ErrorLogList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error: no responce from MAV.
        /// </summary>
        public static string ErrorNoResponce {
            get {
                return ResourceManager.GetString("ErrorNoResponce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You are not connected..
        /// </summary>
        public static string ErrorNotConnected {
            get {
                return ResourceManager.GetString("ErrorNotConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error receiving list
        ///.
        /// </summary>
        public static string ErrorReceivingParams {
            get {
                return ResourceManager.GetString("ErrorReceivingParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error: command rejected by MAV.
        /// </summary>
        public static string ErrorRejectedByMAV {
            get {
                return ResourceManager.GetString("ErrorRejectedByMAV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error renaming file.
        /// </summary>
        public static string ErrorRenameFile {
            get {
                return ResourceManager.GetString("ErrorRenameFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error setting parameter .
        /// </summary>
        public static string ErrorSettingParameter {
            get {
                return ResourceManager.GetString("ErrorSettingParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Set {0} Failed.
        /// </summary>
        public static string ErrorSetValueFailed {
            get {
                return ResourceManager.GetString("ErrorSetValueFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error uploading firmware.
        /// </summary>
        public static string ErrorUploadingFirmware {
            get {
                return ResourceManager.GetString("ErrorUploadingFirmware", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Extended Tuning.
        /// </summary>
        public static string ExtendedTuning {
            get {
                return ResourceManager.GetString("ExtendedTuning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to create ground station log - wont log this session.
        /// </summary>
        public static string Failclog {
            get {
                return ResourceManager.GetString("Failclog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to connect to SITL instance.
        /// </summary>
        public static string Failed_to_connect_to_SITL_instance {
            get {
                return ResourceManager.GetString("Failed_to_connect_to_SITL_instance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to download the SITL image..
        /// </summary>
        public static string Failed_to_download_the_SITL_image {
            get {
                return ResourceManager.GetString("Failed_to_download_the_SITL_image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed download.
        /// </summary>
        public static string FailedDownload {
            get {
                return ResourceManager.GetString("FailedDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed read HEX.
        /// </summary>
        public static string FailedReadHEX {
            get {
                return ResourceManager.GetString("FailedReadHEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to read firmware.hex :.
        /// </summary>
        public static string FailedToReadHex {
            get {
                return ResourceManager.GetString("FailedToReadHex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed upload.
        /// </summary>
        public static string FailedUpload {
            get {
                return ResourceManager.GetString("FailedUpload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на FailSafe.
        /// </summary>
        public static string FailSafe {
            get {
                return ResourceManager.GetString("FailSafe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Flight Modes.
        /// </summary>
        public static string FlightModes {
            get {
                return ResourceManager.GetString("FlightModes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Full Parameter List.
        /// </summary>
        public static string FullParameterList {
            get {
                return ResourceManager.GetString("FullParameterList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Full Parameter Tree.
        /// </summary>
        public static string FullParameterTree {
            get {
                return ResourceManager.GetString("FullParameterTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GeoFence.
        /// </summary>
        public static string GeoFence {
            get {
                return ResourceManager.GetString("GeoFence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Geofence Breach.
        /// </summary>
        public static string GeofenceBreach {
            get {
                return ResourceManager.GetString("GeofenceBreach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Getting .
        /// </summary>
        public static string Getting {
            get {
                return ResourceManager.GetString("Getting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Getting FW List.
        /// </summary>
        public static string GettingFWList {
            get {
                return ResourceManager.GetString("GettingFWList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Getting FW Version.
        /// </summary>
        public static string GettingFWVersion {
            get {
                return ResourceManager.GetString("GettingFWVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Getting Params.
        /// </summary>
        public static string GettingParams {
            get {
                return ResourceManager.GetString("GettingParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Getting Params....
        /// </summary>
        public static string GettingParamsD {
            get {
                return ResourceManager.GetString("GettingParamsD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Getting updated parameters.
        /// </summary>
        public static string GettingUpdatedParams {
            get {
                return ResourceManager.GetString("GettingUpdatedParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Got param .
        /// </summary>
        public static string Gotparam {
            get {
                return ResourceManager.GetString("Gotparam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid home location.
        /// </summary>
        public static string Invalid_home_location {
            get {
                return ResourceManager.GetString("Invalid_home_location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid Location.
        /// </summary>
        public static string Invalid_Location {
            get {
                return ResourceManager.GetString("Invalid_Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid Alt.
        /// </summary>
        public static string InvalidAlt {
            get {
                return ResourceManager.GetString("InvalidAlt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid BaudRate.
        /// </summary>
        public static string InvalidBaudRate {
            get {
                return ResourceManager.GetString("InvalidBaudRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid Board Type.
        /// </summary>
        public static string InvalidBoardType {
            get {
                return ResourceManager.GetString("InvalidBoardType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid Cert.
        /// </summary>
        public static string InvalidCert {
            get {
                return ResourceManager.GetString("InvalidCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid Field.
        /// </summary>
        public static string InvalidField {
            get {
                return ResourceManager.GetString("InvalidField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid FileName.
        /// </summary>
        public static string InvalidFileName {
            get {
                return ResourceManager.GetString("InvalidFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid number entered
        ///.
        /// </summary>
        public static string InvalidNumberEntered {
            get {
                return ResourceManager.GetString("InvalidNumberEntered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid Pan Range.
        /// </summary>
        public static string InvalidPanRange {
            get {
                return ResourceManager.GetString("InvalidPanRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid PortName.
        /// </summary>
        public static string InvalidPortName {
            get {
                return ResourceManager.GetString("InvalidPortName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid Tilt Range.
        /// </summary>
        public static string InvalidTiltRange {
            get {
                return ResourceManager.GetString("InvalidTiltRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid Update Rate.
        /// </summary>
        public static string InvalidUpdateRate {
            get {
                return ResourceManager.GetString("InvalidUpdateRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Link Stats.
        /// </summary>
        public static string LinkStats {
            get {
                return ResourceManager.GetString("LinkStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Load data.
        /// </summary>
        public static string Load_data {
            get {
                return ResourceManager.GetString("Load_data", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Loading.
        /// </summary>
        public static string Loading {
            get {
                return ResourceManager.GetString("Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please click ok and move the autopilot around all axises in a circular motion.
        /// </summary>
        public static string MagCalibMsg {
            get {
                return ResourceManager.GetString("MagCalibMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MAVFtp.
        /// </summary>
        public static string MAVFtp {
            get {
                return ResourceManager.GetString("MAVFtp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mavlink Connecting....
        /// </summary>
        public static string MavlinkConnecting {
            get {
                return ResourceManager.GetString("MavlinkConnecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You are missing data points. do you want to run the calibration anyway?.
        /// </summary>
        public static string MissingDataPoints {
            get {
                return ResourceManager.GetString("MissingDataPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New Firmware.
        /// </summary>
        public static string NewFirmware {
            get {
                return ResourceManager.GetString("NewFirmware", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New firmware available
        ///.
        /// </summary>
        public static string NewFirmwareA {
            get {
                return ResourceManager.GetString("NewFirmwareA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No firmware available for this board!.
        /// </summary>
        public static string No_firmware_available_for_this_board {
            get {
                return ResourceManager.GetString("No_firmware_available_for_this_board", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No valid heartbeats read from port.
        /// </summary>
        public static string No_valid_heartbeats_read_from_port {
            get {
                return ResourceManager.GetString("No_valid_heartbeats_read_from_port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No valid sik radio.
        /// </summary>
        public static string No_valid_sik_radio {
            get {
                return ResourceManager.GetString("No_valid_sik_radio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No FMT message for .
        /// </summary>
        public static string NoFMTMessage {
            get {
                return ResourceManager.GetString("NoFMTMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No need to upload. already on the board.
        /// </summary>
        public static string NoNeedToUpload {
            get {
                return ResourceManager.GetString("NoNeedToUpload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на NO RC Receiver.
        /// </summary>
        public static string NORCReceiver {
            get {
                return ResourceManager.GetString("NORCReceiver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not available when used as a windows store app.
        /// </summary>
        public static string Not_available_when_used_as_a_windows_store_app {
            get {
                return ResourceManager.GetString("Not_available_when_used_as_a_windows_store_app", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Note.
        /// </summary>
        public static string Note {
            get {
                return ResourceManager.GetString("Note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Obtain From Module.
        /// </summary>
        public static string ObtainFromModule {
            get {
                return ResourceManager.GetString("ObtainFromModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OK.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Onboard OSD.
        /// </summary>
        public static string OnboardOSD {
            get {
                return ResourceManager.GetString("OnboardOSD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Only 1 Heatbeat Received.
        /// </summary>
        public static string Only1Hb {
            get {
                return ResourceManager.GetString("Only1Hb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Only 1 Mavlink Heartbeat Packets was read from this port - Verify your hardware is setup correctly
        ///Mission Planner waits for 2 valid heartbeat packets before connecting.
        /// </summary>
        public static string Only1HbD {
            get {
                return ResourceManager.GetString("Only1HbD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A Param refresh is required - Please press F5
        ///old #{0}  new #{1}.
        /// </summary>
        public static string ParamRefreshRequired {
            get {
                return ResourceManager.GetString("ParamRefreshRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Planner.
        /// </summary>
        public static string Planner {
            get {
                return ResourceManager.GetString("Planner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please connect first.
        /// </summary>
        public static string PleaseConnect {
            get {
                return ResourceManager.GetString("PleaseConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please connect and backup your config in the configuration tab..
        /// </summary>
        public static string PleaseConnectAndBackupConfig {
            get {
                return ResourceManager.GetString("PleaseConnectAndBackupConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please load a valid file.
        /// </summary>
        public static string PleaseLoadValidFile {
            get {
                return ResourceManager.GetString("PleaseLoadValidFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please select a cell first.
        /// </summary>
        public static string PleaseSelectCell {
            get {
                return ResourceManager.GetString("PleaseSelectCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please unplug the board, and then press OK and plug back in.
        ///Mission Planner will look for 30 seconds to find the board.
        /// </summary>
        public static string PleaseUnplugTheBoardAnd {
            get {
                return ResourceManager.GetString("PleaseUnplugTheBoardAnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 
        ///Please upgrade.
        /// </summary>
        public static string Pleaseup {
            get {
                return ResourceManager.GetString("Pleaseup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please wait for the musical tones to finish before clicking OK.
        /// </summary>
        public static string PleaseWaitForTheMusicalTones {
            get {
                return ResourceManager.GetString("PleaseWaitForTheMusicalTones", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на pos horiz variance.
        /// </summary>
        public static string pos_horiz_variance {
            get {
                return ResourceManager.GetString("pos_horiz_variance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на pos vert variance.
        /// </summary>
        public static string pos_vert_variance {
            get {
                return ResourceManager.GetString("pos_vert_variance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Prearm check failed - check messages.
        /// </summary>
        public static string Prearm_check_failed {
            get {
                return ResourceManager.GetString("Prearm_check_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sucessfully programmed.
        /// </summary>
        public static string ProgrammedOK {
            get {
                return ResourceManager.GetString("ProgrammedOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Put the transmitter in bind mode. Receiver is waiting..
        /// </summary>
        public static string Put_the_transmitter_in_bind_mode__Receiver_is_waiting {
            get {
                return ResourceManager.GetString("Put_the_transmitter_in_bind_mode__Receiver_is_waiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ?.
        /// </summary>
        public static string QuestionMark {
            get {
                return ResourceManager.GetString("QuestionMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Raw Param Warning.
        /// </summary>
        public static string RawParamWarning {
            get {
                return ResourceManager.GetString("RawParamWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All values on this screen are not min/max checked. Please double check your input.
        ///Please use Standard/Advanced Params for the safe settings.
        /// </summary>
        public static string RawParamWarningi {
            get {
                return ResourceManager.GetString("RawParamWarningi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reading Hex.
        /// </summary>
        public static string ReadingHex {
            get {
                return ResourceManager.GetString("ReadingHex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reading Hex File.
        /// </summary>
        public static string ReadingHexFile {
            get {
                return ResourceManager.GetString("ReadingHexFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Received List.
        /// </summary>
        public static string ReceivedList {
            get {
                return ResourceManager.GetString("ReceivedList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на run anyway.
        /// </summary>
        public static string RunAnyway {
            get {
                return ResourceManager.GetString("RunAnyway", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Saving.
        /// </summary>
        public static string Saving {
            get {
                return ResourceManager.GetString("Saving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Scanning File.
        /// </summary>
        public static string Scanning_File {
            get {
                return ResourceManager.GetString("Scanning_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please select a comport.
        /// </summary>
        public static string SelectComport {
            get {
                return ResourceManager.GetString("SelectComport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Set Here.
        /// </summary>
        public static string SetHere {
            get {
                return ResourceManager.GetString("SetHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show me again?.
        /// </summary>
        public static string ShowMeAgain {
            get {
                return ResourceManager.GetString("ShowMeAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Standard Params.
        /// </summary>
        public static string StandardParams {
            get {
                return ResourceManager.GetString("StandardParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start.
        /// </summary>
        public static string Start {
            get {
                return ResourceManager.GetString("Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your model is still moving are you sure you want to disconnect?.
        /// </summary>
        public static string Stillmoving {
            get {
                return ResourceManager.GetString("Stillmoving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stop.
        /// </summary>
        public static string Stop {
            get {
                return ResourceManager.GetString("Stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;root&gt;
        ///  &lt;!-- 
        ///    Microsoft ResX Schema 
        ///    
        ///    Version 2.0
        ///    
        ///    The primary goals of this format is to allow a simple XML format 
        ///    that is mostly human readable. The generation and parsing of the 
        ///    various data types are done through the TypeConverter classes 
        ///    associated with the data types.
        ///    
        ///    Example:
        ///    
        ///    ... ado.net/XML headers &amp; schema ...
        ///    &lt;resheader name=&quot;resmimetype&quot;&gt;text/microsoft-resx&lt;/resheader&gt;
        ///    &lt;resheader n [остаток строки не уместился]&quot;;.
        /// </summary>
        public static string Strings_ru_RU {
            get {
                return ResourceManager.GetString("Strings_ru_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на terrain alt variance.
        /// </summary>
        public static string terrain_alt_variance {
            get {
                return ResourceManager.GetString("terrain_alt_variance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This board has been retired, Mission Planner this will upload the last available version to your board (AC 3.2.1/AP 3.4.0).
        /// </summary>
        public static string ThisBoardHasBeenRetired {
            get {
                return ResourceManager.GetString("ThisBoardHasBeenRetired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Timeout waiting for autoscan/no mavlink device connected.
        /// </summary>
        public static string Timeout {
            get {
                return ResourceManager.GetString("Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tracker Home.
        /// </summary>
        public static string TrackerHome {
            get {
                return ResourceManager.GetString("TrackerHome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на trunk.
        /// </summary>
        public static string Trunk {
            get {
                return ResourceManager.GetString("Trunk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на These are the latest trunk firmware, use at your own risk!!!.
        /// </summary>
        public static string TrunkWarning {
            get {
                return ResourceManager.GetString("TrunkWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Trying to connect.
        ///Timeout in {0}.
        /// </summary>
        public static string Trying {
            get {
                return ResourceManager.GetString("Trying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Units: {0}{1}.
        /// </summary>
        public static string Units {
            get {
                return ResourceManager.GetString("Units", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Update Found
        ///
        ///Do you wish to update now? .
        /// </summary>
        public static string UpdateFound {
            get {
                return ResourceManager.GetString("UpdateFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No update available..
        /// </summary>
        public static string UpdateNotFound {
            get {
                return ResourceManager.GetString("UpdateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Update Now.
        /// </summary>
        public static string UpdateNow {
            get {
                return ResourceManager.GetString("UpdateNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Upload Complete.
        /// </summary>
        public static string UploadComplete {
            get {
                return ResourceManager.GetString("UploadComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Uploading {0} bytes to Board:.
        /// </summary>
        public static string UploadingBytesToBoard {
            get {
                return ResourceManager.GetString("UploadingBytesToBoard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Upload succeeded, but verify failed: exp {0} got {1} at .
        /// </summary>
        public static string UploadSucceededButVerifyFailed {
            get {
                return ResourceManager.GetString("UploadSucceededButVerifyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User Params.
        /// </summary>
        public static string User_Params {
            get {
                return ResourceManager.GetString("User_Params", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на velocity variance.
        /// </summary>
        public static string velocity_variance {
            get {
                return ResourceManager.GetString("velocity_variance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Verify Complete.
        /// </summary>
        public static string VerifyComplete {
            get {
                return ResourceManager.GetString("VerifyComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Verify Firmware.
        /// </summary>
        public static string VerifyFirmware {
            get {
                return ResourceManager.GetString("VerifyFirmware", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warning.
        /// </summary>
        public static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warning, as of AC 3.1 motors will spin when armed, configurable through the MOT_SPIN_ARMED parameter.
        /// </summary>
        public static string WarningAC31 {
            get {
                return ResourceManager.GetString("WarningAC31", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warning, if you are installing AC 3.2 for the first time you MUST redo a Compass calibration..
        /// </summary>
        public static string WarningAC32 {
            get {
                return ResourceManager.GetString("WarningAC32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Log Browse will not function correctly without FMT messages in your log.
        ///These appear to be missing from your log..
        /// </summary>
        public static string WarningLogBrowseFMTMissing {
            get {
                return ResourceManager.GetString("WarningLogBrowseFMTMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warning rally points are located greater than RALLY_LIMIT_KM.
        /// </summary>
        public static string Warningrallypointdistance {
            get {
                return ResourceManager.GetString("Warningrallypointdistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Update Params
        ///DON&apos;T DO THIS IF YOU ARE IN THE AIR
        ///.
        /// </summary>
        public static string WarningUpdateParamList {
            get {
                return ResourceManager.GetString("WarningUpdateParamList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You are using unsupported hardware.
        ///This board does not contain a valid certificate of authenticity.
        ///Please contact your hardware vendor about signing your hardware..
        /// </summary>
        public static string YouAreUsingUnsupportedHardware {
            get {
                return ResourceManager.GetString("YouAreUsingUnsupportedHardware", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Zoom To.
        /// </summary>
        public static string Zoom_To {
            get {
                return ResourceManager.GetString("Zoom_To", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Zoom to the center or the loaded file?.
        /// </summary>
        public static string Zoom_to_the_center_or_the_loaded_file {
            get {
                return ResourceManager.GetString("Zoom_to_the_center_or_the_loaded_file", resourceCulture);
            }
        }
    }
}
